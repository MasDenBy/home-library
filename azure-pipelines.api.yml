trigger:
  paths:
    include:
      - api

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
  - task: UseDotNet@2
    displayName: install sdk
    inputs:
      version: '6.x'

  - task: DotNetCoreCLI@2
    displayName: restore
    inputs:
      command: restore
      projects: 'api/MasDen.HomeLibrary.Api.sln'

  - task: DotNetCoreCLI@2
    displayName: build
    inputs:
      command: build
      projects: 'api/MasDen.HomeLibrary.Api.sln'
      arguments: '--configuration $(buildConfiguration)'

  - task: CmdLine@2
    displayName: tests
    inputs:
      script: |
        dotnet test --logger trx api/MasDen.HomeLibrary.Api.sln

  - task: PublishTestResults@2
    displayName: publish test results
    inputs:
      testRunner: XUnit
      testResultsFiles: '**/*.trx'

  - task: DotNetCoreCLI@2
    inputs:
      command: custom
      custom: tool
      arguments: install -g dotnet-reportgenerator-globaltool
    displayName: install ReportGenerator tool

  - script: reportgenerator -reports:$(Build.SourcesDirectory)/api/tests/CoverageResults/*/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
    displayName: create report

  - task: PublishCodeCoverageResults@1
    displayName: 'publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml